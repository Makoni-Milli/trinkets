Manual for Tartan (c), By Takudzwa Makoni. 

Tartan is a Python program that constructs a tartan pattern image by interpreting a text-file containing the thread-count for a tartan pattern, and saves the image in the directory which the program is called. Tartan uses the Python Image Library to create an image object of a size choosable by the user, called the 'canvas'. Pixels are added along the canvas to create a sett/half-sett, their size and colour are defined in the thread-count text-file. The pattern is then generated either symmetrically or repetitively. A canvas size of about 700 pixels is a good median. Note that a larger size will take longer for the program to weave the pattern.

To jump to sections, use '.h <section-name>'.

? SECTION NAMES ?
enter '.h path' for the file path section in the manual.
enter '.h canv' for the canvas size parameter section in the manual.
enter '.h pattern' for the pattern section in the manual.
enter '.h thread' for the thread-count section in the manual.

? PATH ?

File in the current directory:
When prompted, enter the path to the thread-count text-file that is in the current directory. e.g. if you run the program in the 'Documents' directory, and the text-file is in 'Documents', then simply enter text-file name with its extension. If the file is in another directory that is inside the current directory 'Documents', you must specify this also using: '<other-directory>/file.txt'.

File outside the current directory:
If the file is in another location from the directory in which you loaded the program, you will need to specify the path to the file from the user path using the '~' key. i.e. you must enter: '~/<external-directory>/file.txt'.

? CANV ?

The canvas is a square output image displaying the tartan pattern generated by the program on the user's specification. When prompted, you must specify an integral number for the pixel width and height. A few hundred pixels is ideal, however, note that a larger canvas size will take longer to weave, and may cause the device to heat up. The canvas size is capped at scale factor 8, where scale factor is the quotient of the user input canvas size divided by total thread-count size, which is the sum of all the pixel sizes in the thread-count file.